name: Rust Check
on:
  pull_request:
    types: [opened, reopened, synchronize]
    paths:
      - 'rust/**'
  push:
    branches:
      - master
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true
permissions: write-all
jobs:
  fmt:
    runs-on: ubuntu-latest
    name: fmt
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Install stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt
      - name: Code format check
        working-directory: ./rust
        run: cargo fmt --check
  clippy:
    runs-on: ubuntu-latest
    name: clippy
    permissions: write-all
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Install stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: clippy
      - name: Install protoc
        uses: arduino/setup-protoc@v1
        with:
          version: '3.x'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Clippy check
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features --manifest-path rust/Cargo.toml -- -D warnings
  doc:
    runs-on: ubuntu-latest
    name: doc
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Install stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Install protoc
        uses: arduino/setup-protoc@v1
        with:
          version: '3.x'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Build doc
        working-directory: ./rust
        run: cargo doc --no-deps --all-features
        env:
          RUSTDOCFLAGS: --cfg docsrs
  msrv:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        msrv: [1.61]
    name: msrv / ${{ matrix.msrv }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Install ${{ matrix.msrv }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.msrv }}
      - name: Install protoc
        uses: arduino/setup-protoc@v1
        with:
          version: '3.x'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Cargo +${{ matrix.msrv }} check
        working-directory: ./rust
        run: cargo check
