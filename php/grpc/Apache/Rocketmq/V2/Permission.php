<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: apache/rocketmq/v2/definition.proto

namespace Apache\Rocketmq\V2;

use UnexpectedValueException;

/**
 * Protobuf type <code>apache.rocketmq.v2.Permission</code>
 */
class Permission
{
    /**
     * Generated from protobuf enum <code>PERMISSION_UNSPECIFIED = 0;</code>
     */
    const PERMISSION_UNSPECIFIED = 0;
    /**
     * Generated from protobuf enum <code>NONE = 1;</code>
     */
    const NONE = 1;
    /**
     * Generated from protobuf enum <code>READ = 2;</code>
     */
    const READ = 2;
    /**
     * Generated from protobuf enum <code>WRITE = 3;</code>
     */
    const WRITE = 3;
    /**
     * Generated from protobuf enum <code>READ_WRITE = 4;</code>
     */
    const READ_WRITE = 4;

    private static $valueToName = [
        self::PERMISSION_UNSPECIFIED => 'PERMISSION_UNSPECIFIED',
        self::NONE => 'NONE',
        self::READ => 'READ',
        self::WRITE => 'WRITE',
        self::READ_WRITE => 'READ_WRITE',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

